openapi: 3.0.3
info:
  title: OpenAI Weather Forecast Test
  description: |-
    This is the succession of a test built on symfony 6 framework that utilizes [Weather stack](https://weatherstack.com/) and [OpenAI](https://openai.com/) API to provides
    customized replies about the weather of different locations. By accessing
    specific endpoints, users can retrieve either funny or serious responses
    related to the weather conditions in the specified place or region.

    For example, visiting the `/new-york/funny` endpoint would generate a
    lighthearted and humorous reply about the weather in New York, while
    accessing the `/new-york/serious` endpoint would provide a more solemn and
    informative response. The API caters to various locations, allowing users to
    substitute *new-york* with any place or region of their choice to obtain
    weather-related content with the desired tone and style.
    
    ***
    
    ## Example
    
    ```
    http://localhost/nigeria/funny
    ```
    ## Response
    
    ```
    {
      "name": "OpenAI Weather Forecast Test",
      "time": 1689399903,
      "success": true,
      "status": 200,
      "message": "Ah, Abuja, Nigeria! Let me take a look at the weather there. Well, my friend, it seems like the weather in Abuja is playing a little game of hide-and-seek. It's partly cloudy, with a temperature of 22 degrees Celsius. The wind is blowing from...",
      "info": []
    }
    ```
    
    ## Be informed:
    
    Your Weather stack and OpenAI API keys must be set internally in the `.env` file for this API to work.
  contact:
    name: ucscode
    url: http://ucscode.me
    email: uche23mail@gmail.com
  license:
    name: MIT
    url: https://opensource.org/license/mit/
  version: 1.0.0
paths:
  /{region}/{tone}:
    parameters:
      - name: region
        in: path
        required: true
        schema:
          type: string
      - name: tone
        in: path
        required: true
        schema:
          type: string
    get:
      description: >-
        Returns the reply from OpenAI about a region with the funny or serious
        tone
      responses:
        '200':
          description: |- 
            Returns a JSON data that defines a successful output of the chat completion API. 
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/get_response'
        default:
          description: |-
            Returns a JSON data describing an unsuccessful output of the chat completion API. An example would look like this:
          content:
            application/json:
              schema:
                allOf: 
                  - $ref: '#/components/schemas/get_response'
                  - type: object
                    properties:
                      info:
                        type: object
                        properties:
                          error:
                            type: string
                          source:
                            oneOf: 
                              - type: string
                              - type: object
components:
  schemas:
    get_response:
        type: object
        properties:
          name:
            type: string
          time:
            type: integer
          success:
            type: boolean
          status:
            type: integer
          message:
            type: string
          info:
            type: object